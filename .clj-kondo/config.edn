{:linters
 {:unresolved-symbol
  {:exclude [
             (game.macros/req [state side eid card targets target context
                               runner corp run run-server run-ices run-position
                               current-ice corp-reg corp-reg-last runner-reg
                               runner-reg-last installed remotes servers
                               unprotected runnable-servers hq-runnable rd-runnable
                               archives-runnable tagged this-card-run this-server
                               corp-currently-drawing runner-currently-drawing])
             (game.macros/effect [state side eid card targets target context
                                  runner corp run run-server run-ices run-position
                                  current-ice corp-reg corp-reg-last runner-reg
                                  runner-reg-last installed remotes servers
                                  unprotected runnable-servers hq-runnable rd-runnable
                                  archives-runnable tagged this-card-run this-server
                                  corp-currently-drawing runner-currently-drawing])
             (game.macros/msg [state side eid card targets target context
                               runner corp run run-server run-ices run-position
                               current-ice corp-reg corp-reg-last runner-reg
                               runner-reg-last installed remotes servers
                               unprotected runnable-servers hq-runnable rd-runnable
                               archives-runnable tagged this-card-run this-server
                               corp-currently-drawing runner-currently-drawing])
             (game.macros/wait-for [async-result])
             (game.core/req [state side eid card targets target context
                             runner corp run run-server run-ices run-position
                             current-ice corp-reg corp-reg-last runner-reg
                             runner-reg-last installed remotes servers
                             unprotected runnable-servers hq-runnable rd-runnable
                             archives-runnable tagged this-card-run this-server
                             corp-currently-drawing runner-currently-drawing])
             (game.core/effect [state side eid card targets target context
                                runner corp run run-server run-ices run-position
                                current-ice corp-reg corp-reg-last runner-reg
                                runner-reg-last installed remotes servers
                                unprotected runnable-servers hq-runnable rd-runnable
                                archives-runnable tagged this-card-run this-server
                                corp-currently-drawing runner-currently-drawing])
             (game.core/msg [state side eid card targets target context
                             runner corp run run-server run-ices run-position
                             current-ice corp-reg corp-reg-last runner-reg
                             runner-reg-last installed remotes servers
                             unprotected runnable-servers hq-runnable rd-runnable
                             archives-runnable tagged this-card-run this-server
                             corp-currently-drawing runner-currently-drawing])
             (game.core/wait-for [async-result])
             (test-setup/do-game [state get-corp get-runner get-run refresh hand-size
                                  prompt-map prompt-button prompt-type prompt-buttons
                                  prompt-titles prompt-fmt])
             ]}
  :invalid-arity {:skip-args [game.macros/effect game.macros/wait-for
                              game.core/effect game.core/wait-for]}
  :unused-namespace {:exclude ["game.core.*"]}
  :refer-all {:level :off}
  :type-mismatch
  {:namespaces
   {monger.collection
    {insert {:arities {3 {:args [:any :any :map]}
                       4 {:args [:any :any :map :any]}}}
     insert-and-return {:arities {3 {:args [:any :any :map]}
                                  4 {:args [:any :any :map :any]}}}
     insert-batch {:arities {3 {:args [:any :any :seq]}
                             4 {:args [:any :any :seq :any]}}}
     find {:arities {2 {:args [:any :any]}
                     3 {:args [:any :any :any]}
                     4 {:args [:any :any :any :any]}}}
     find-maps {:arities {2 {:args [:any :any]}
                          3 {:args [:any :any :any]}
                          4 {:args [:any :any :any :any]}}}
     find-seq {:arities {2 {:args [:any :any]}
                         3 {:args [:any :any :any]}
                         4 {:args [:any :any :any :any]}}}
     find-one {:arities {3 {:args [:any :any :any]}
                         4 {:args [:any :any :any :any]}}}
     find-one-as-map {:arities {3 {:args [:any :any :any]}
                                4 {:args [:any :any :any :any]}
                                5 {:args [:any :any :any :any :any]}}}
     find-and-modify {:arities {5 {:args [:any :any :any :any :any]}}}
     find-by-id {:arities {3 {:args [:any :any :any]}
                           4 {:args [:any :any :any :any]}}}
     find-map-by-id {:arities {3 {:args [:any :any :any]}
                               4 {:args [:any :any :any :any]}
                               5 {:args [:any :any :any :any :any]}}}
     count {:arities {2 {:args [:any :any]}
                      3 {:args [:any :any :any]}}}
     any?  {:arities {2 {:args [:any :any]}
                      3 {:args [:any :any :any]}}}
     empty?  {:arities {2 {:args [:any :any]}}}
     update {:arities {4 {:args [:any :any :any :any]}
                       5 {:args [:any :any :any :any :any]}}}
     upsert {:arities {4 {:args [:any :any :any :any]}
                       5 {:args [:any :any :any :any :any]}}}
     update-by-id {:arities {4 {:args [:any :any :any :any]}
                             5 {:args [:any :any :any :any :any]}}}
     update-by-ids {:arities {4 {:args [:any :any :any :any]}
                              5 {:args [:any :any :any :any :any]}}}
     save {:arities {3 {:args [:any :any :any]}
                     4 {:args [:any :any :any :any]}}}
     save-and-return {:arities {3 {:args [:any :any :any]}
                                4 {:args [:any :any :any :any]}}}
     remove {:arities {2 {:args [:any :any]}
                       3 {:args [:any :any :any]}}}
     remove-by-id {:arities {3 {:args [:any :any :any]}}}
     purge-many {:arities {2 {:args [:any :any]}}}
     create-index {:arities {3 {:args [:any :any :any]}
                             4 {:args [:any :any :any :any]}}}}}}
  }
 :lint-as {
           reagent.core/with-let clojure.core/let
           game.macros/when-let* clojure.core/let
           game.core/req game.macros/req
           game.core/effect game.macros/effect
           game.core/msg game.macros/msg
           game.core/wait-for game.macros/wait-for
           test-setup/before-each clojure.core/let
           test-setup/deftest-pending clojure.test/deftest
           monger.operators/defoperator clojure.core/def
           monger.query/with-collection clojure.core/->
           }
 :config-paths ["rewrite-clj/rewrite-clj"]
 }
